{"version":3,"sources":["./src/app/html.directive.ts","./src/app/html/html.module.ts","./src/app/interfaces/component-map.ts","./src/app/rest.service.ts","./src/environments/environment.ts","./src/app/html/div/div.component.ts","./src/app/html/div/div.component.html","./src/app/component-generator.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/main/graph/graph.component.ts","./src/app/main/graph/graph.component.html","./src/app/main/main.module.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHtml]',\n})\nexport class HtmlDirective {\n\n  constructor(el: ElementRef) {\n       el.nativeElement.style.backgroundColor = 'yellow';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DivComponent } from './div/div.component';\n\n\n\n\n@NgModule({\n  declarations: [DivComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class HtmlModule { }\n","// need better way to import all\nimport { GraphComponent } from \"@main/graph/graph.component\";\nimport { DivComponent } from \"@html/div/div.component\";\n\n\nexport const componentMap: { [key: string]: any  } = {\n  graph: GraphComponent,\n  div: DivComponent, \n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators'\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestService {\n  response$!: Observable<any>;\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n  }\n\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  getJSON(apiPoint: string, queryDict?: any): Observable<any> {\n    //need to add error handler\t  \t\n    return this.httpClient.get(apiPoint, {params: queryDict?queryDict:null}).pipe(retry(3));\n  }\n\n\n  putJSON(apiPoint: string, data: any): Observable<any> {\n    //need to add error handler\t  \t\n    this.response$ = this.httpClient.post(apiPoint, data, this.httpOptions).pipe(retry(3));\n    return this.response$;\n  }\n\n\n  postJSON(apiPoint: string, data: any): Observable<any> {\n    //need to add error handler\t  \t\n    this.response$ = this.httpClient.post(apiPoint, data, this.httpOptions).pipe(retry(3));\n    return this.response$;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, ElementRef, Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { htmlCompInterface } from \"@interfaces/component-interface\" ;\nimport { RestService } from '@app/rest.service';\n\n\n@Component({\n  selector: 'app-div',\n  templateUrl: './div.component.html',\n  styleUrls: ['./div.component.sass']\n})\n\nexport class DivComponent implements OnInit, htmlCompInterface {\n\n  @Input() properties!: object; \n  child: any;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2, @Inject(DOCUMENT) private document:any,  ) {\n    this.child = document.createElement('div'); \n  }\n\n  ngOnInit(): void {\n    this.createDom(); \n  }\n\n  \n  createDom(): void {\n    this.child.innerHTML = \"test me\";\n    this.child.setAttribute(\"id\", \"Baby\");    \n\n    const button = document.createElement('button');\n    button.innerHTML = \"click me\";\n    button.addEventListener(\"click\", this.change);   \n\n    this.renderer.appendChild(this.elementRef.nativeElement, this.child);\n    this.renderer.appendChild(this.elementRef.nativeElement, button);\n  }\n\n\n  change(): void {\n    document.getElementById(\"Baby\")!.innerHTML = \"change!\";\n  }\t  \n\n\n\n  subscribeIn(): void {\n\n\n  }\n\n  subscribeOut(): void {\n\n\n  }\n\n\n}\n","<ng-template></ng-template>\n","import { Injectable, ComponentFactoryResolver } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentGeneratorService {\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  generateComponent(componentName: string) {\n    //let componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentName);\n\n \n  }\n\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  AfterViewInit,\n  Injector,\n  ElementRef,\n  Renderer2,\n  Inject,\n} from '@angular/core';\n\nimport { DOCUMENT } from '@angular/common';\n\nimport { HtmlDirective } from './html.directive';\n\nimport { RestService } from '@app/rest.service';\nimport { ComponentGeneratorService } from '@app/component-generator.service';\n\nimport { DivComponent } from '@html/div/div.component';\n\nimport { componentMap } from '@interfaces/component-map';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n})\n\nexport class AppComponent implements OnInit, AfterViewInit {\n  title = 'zig';\n  jsonData: any;\n  factoryResolver: any;\n  component: any;\n\n  v: any;\n\n\n  @ViewChild('zigTemplate', { read: ViewContainerRef }) zigTemplate!: ViewContainerRef;\n\n  //STORE THIS SEPARATELY\n  private static readonly initialApiEndPoint: string = 'http://127.0.0.1:5000/api';\n\n  constructor(\n    private restService: RestService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    private elementRef: ElementRef, \n    private renderer: Renderer2, \n    @Inject(DOCUMENT) private document:any,\n  ) {}\n\n  ngOnInit() {\n    this.try();\t\n    \n  }\n\n  ngAfterViewInit() {\n    this.insertDOM();\n    //this.getInitialData();\n  }\n\n  insertDOM(): void {\n    this.restService.getJSON(AppComponent.initialApiEndPoint).subscribe((data) => {\n      this.jsonData = data;\n      for (let x in this.jsonData) {\n        let type = this.jsonData[x]['type'];\n        let properties = this.jsonData[x]['data'];\n\n        if(type==\"div\") {\n\t  let ele = this.renderer.createElement(type);\n\t  let child = this.renderer.createElement(type);\n\n\t  //this.renderer.setAttribute(ele, \"style\", \"height:100px;\");\n\t  this.renderer.setAttribute(ele, \"appHtml\", \"\");\n\t  this.renderer.setProperty(ele, \"appHtml\", \"\");\n\t  \t\n\t  this.renderer.appendChild(ele, child);\n\t  this.renderer.appendChild(this.elementRef.nativeElement, ele); \n\n        }\n      }\n    });\n  }\n\n\n  try(): void {\n    this.v = new DivComponent(this.elementRef, this.renderer, this.document); \n    //this.v.properties = properties;\n  }\n\n\n  getInitialData(): void {\n    this.restService.getJSON(AppComponent.initialApiEndPoint).subscribe((data) => {\n      this.jsonData = data;\n      for (let x in this.jsonData) {\n        let type = this.jsonData[x]['type'];\n        let properties = this.jsonData[x]['data'];\n\n        // get Factory for each component and use that to create the component\n        this.factoryResolver = this.componentFactoryResolver.resolveComponentFactory(componentMap[type]);\n        this.component = this.factoryResolver.create(this.injector);\n\n\tlet ele = this.component.location;\n\tthis.renderer.setAttribute(ele, \"appHtml\", \"\");\n\n        this.zigTemplate.insert(this.component.hostView);\n\n\t// store all components in a hashmap\n\n\n        // auto pass all properties regardless of type\n        this.component.instance.properties = properties;\n      }\n    });\n  }\n\n  renderComponent(): void {\n    let resolver = this.componentFactoryResolver.resolveComponentFactory(componentMap['graph']);\n    let componentFactory = this.zigTemplate.createComponent(resolver);\n  }\n\n  /*\n  \n  renderInteractions(): void {\n    this.restService.getJSON(AppComponent.initialApiEndPoint).subscribe((data) => {\n      this.jsonInteractions = data['interactions'];\n      for (let x in this.jsonInteractions) {\n        let interactionPoint = this.jsonInteractions[x]['api'];\n\tlet inputElements = this.jsonInteractions[x]['in'];\n        let outputElements = this.jsonInteractions[x]['out'];\t\n\n        for (let i in inputElements) {\n\t  let component_id = inputElements['id']; \n\t  let component_attr = inputElements['property']; \n          let component = this.componentDict[component_id];\n          \n\t  // this method?? how to set that attribute as input\n\t  // how to set attributes that are not defined?\n\t  // what about output?\n\t  // what about attributes that could be both output and input?\n          this.restService.getJSON(interactionPoint).subscribe((data) => { component.instance[component_attr] = data; });\n\n\n          // another method\n\t  // use document to get id\n\t  // set attribute to be async\n\t  // this.prop = this.restService.getJSON(interactionPoint).subscribe((data)\n\t  // OUTPUT: this.child.setAttribute(\"id\", \"{{prop | async}}\");\n\t  // what about input?  \n\n\t  // from client-side: commonly value, inner html, or element-specific\n\t  // from server: value, and can be any attributes\n\n\n\n        }\t\t\t\t\n\t);\n      }\n    });\n  }\n\n*/\n\n}\n","<p appHtml>test tes test</p>\n<ng-container #zigTemplate>\n</ng-container> \n","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport { mainCompInterface } from \"@interfaces/component-interface\" ;\n\ndeclare var Plotly: any;\n\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.sass']\n})\nexport class GraphComponent implements OnInit, mainCompInterface {\n  graphId! :string;\n  readonly max: number = 100000;\n  @Input() properties!: { [key:string]:any } ;\n\n  constructor() { \n     \n \n  }\n\n  ngOnInit(): void {\n    if(!this.graphId) {\n      this.generateGraphId();\n    }\n    \n  }\n\n\n  ngAfterViewInit() {\n    this.createGraph(this.properties['data'],this.properties['layout'] );\n  }\n\n  // graphData should be an object literal\n  createGraph(graphData:any, graphLayout:any) {\n    Plotly.newPlot(this.graphId, graphData, graphLayout);\n  }\t  \n\n  generateGraphId() {\n    this.graphId = (Math.random() * this.max).toString();\n  }\n}\n","<div id=\"{{ graphId }}\" style=\"height:100%;\"></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GraphComponent } from './graph/graph.component';\n\n\n\n@NgModule({\n  declarations: [GraphComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GraphComponent, \n  ]\n})\nexport class MainModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HtmlDirective } from './html.directive';\n\n\nimport { MainModule } from './main/main.module';\nimport { HtmlModule } from './html/html.module';\n\n\nimport { RestService } from './rest.service';\nimport { ComponentGeneratorService } from './component-generator.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HtmlDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule, \n    MainModule,\n    HtmlModule,\n  ],\n  providers: [RestService, ComponentGeneratorService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { \n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}